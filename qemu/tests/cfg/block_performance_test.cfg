- block_performance_test:
    type = block_performance_test
    only virtio_blk, virtio_scsi
    not_preprocess = yes
    fio_dir = /home/fio_perf
    kill_vm = yes
    fio_cmd_timeout = 7200
    vcpu_maxcpus = 8

    force_create_image_stg0 = yes
    force_remove_image_stg0 = yes
    force_create_image_stg1 = yes
    force_remove_image_stg1 = yes
    force_create_image_stg2 = yes
    force_remove_image_stg2 = yes
    force_create_image_stg3 = yes
    force_remove_image_stg3 = yes

    drive_cache_stg0 = none
    drive_cache_stg1 = none
    drive_cache_stg2 = none
    drive_cache_stg3 = none

    image_size_stg0 = 4224M
    image_size_stg1 = 4352M
    image_size_stg2 = 4480M
    image_size_stg3 = 4608M

    preallocation = falloc
    preallocated_stg0 = falloc
    preallocated_stg1 = falloc
    preallocated_stg2 = falloc
    preallocated_stg3 = falloc

    blk_extra_params_stg0 = "serial=stg0"
    blk_extra_params_stg1 = "serial=stg1"
    blk_extra_params_stg2 = "serial=stg2"
    blk_extra_params_stg3 = "serial=stg3"
    image_format_stg0 = raw
    image_format_stg1 = raw
    image_format_stg2 = raw
    image_format_stg3 = raw
    fio_raw_device_stg0 = yes
    fio_raw_device_stg1 = yes
    fio_raw_device_stg2 = yes
    fio_raw_device_stg3 = yes

    image_name_stg0 = ${fio_dir}/stg0
    image_name_stg1 = ${fio_dir}/stg1
    image_name_stg2 = ${fio_dir}/stg2
    image_name_stg3 = ${fio_dir}/stg3

    boot_wait_time = 30
    # performance order from lower to higher
    compare_images = " stg0 stg1 "

    # no/yes if set yes the start_vm = no to adjust image name/
    select_disk_request = yes
    # default is 20, unit is G
    select_disk_minimum_size = 20

    # priority exist and empty disk
    select_disk_name = /dev/nvme0n1

    # sampling threshold
    sampling_rate = 0.7
    dispersion = 0.05
    error_threshold = 0.1
    warn_threshold = 0.05

    host_test_cmd = "fio --runtime=20 --size=5G --name=test --rw=write "
    host_test_cmd += " --group_reporting --direct=1 --filename=%s "
    host_test_cmd += " --ioengine=libaio --randrepeat=1 "
    host_test_cmd += " --numjobs=4 --output-format=json "

    pre_command = "if ! which fio;then yum install fio -y;fi &&"
    pre_command += "  mkdir -p ${fio_dir};"

    fio_cmd = " --runtime=20 --ramp_time=3 --size=4G --time_based=1 --direct=1 "
    fio_cmd += " --numjobs=8 --group_reporting --filename=%s "
    fio_cmd += " --randrepeat=1 --output-format=json "

    host_init_operation = lsblk
    host_deinit_operation = host_func_demo
    Linux:
        fio_cmd += " --ioengine=libaio "
        guest_init_operation = lsblk -n
        guest_deinit_operation = guest_func_demo
    Windows:
        vm_arch_name = i686
        fio_cmd += " --thread  "
        guest_init_operation = wmic diskdrive get Index,Name,Size

    fio_rw = read write randrw
    fio_iodepth = 64
    fio_bs = 4k
    run_times = 6
    variants:
        - with_queue_size:
            no i440fx
            fio_stonewall_cmd +=" --stonewall --name=rw-512k-64 --rw=rw --bs=512k --iodepth=64 "
            images += ${compare_images}
            virtio_blk:
                blk_extra_params_stg0 += ",queue-size=128"
                blk_extra_params_stg1 += ",queue-size=1024"
            virtio_scsi:
                drive_bus_stg0 = 1
                drive_bus_stg1 = 2
                bus_extra_params_stg0 = "virtqueue_size=128"
                bus_extra_params_stg1 = "virtqueue_size=1024"

        - with_multi_queue:
            no i440fx
            extra_images = " stg2 "
            images += ${compare_images} ${extra_images}
            Linux:
                guest_operation = check_default_mq
                check_default_mq_cmd = "ls /sys/block/%s/mq/"
            virtio_blk:
                blk_extra_params_stg0 += ",num-queues=1"
                blk_extra_params_stg1 += ",num-queues=${vcpu_maxcpus}"
            virtio_scsi:
                drive_bus_stg0 = 1
                drive_bus_stg1 = 2
                bus_extra_params_stg0 = "num_queues=1"
                bus_extra_params_stg1 = "num_queues=${vcpu_maxcpus}"
