- single_driver_install:
    type = single_driver_install
    only Windows
    cdroms += " virtio winutils"
    backup_image_before_test = yes
    restore_image_after_test = yes
    kill_after_test = yes
    login_timeout = 360
    driver_install_timeout = 600
    tmp_folder = C:\tmp
    guest_alias = r"Win7-32:w7\x86,Win7-64:w7\amd64,Win8-32:w8\x86,Win8-64:w8\amd64,Win8.1-32:w8.1\x86,Win8-64.1:w8.1\amd64,Win10-32:w10\x86,Win10-64:w10\amd64,Win2008-32:2k8\x86,Win2008-64:2k8\amd64,Win2012-64:2k12\amd64,Win2012-64r2:2k12R2\amd64"
    driver_install_cmd = "python WIN_UTILS:\win_driver_install.py %s %s %s %s %s"
    show_file_ext_cmd = "reg add HKCU\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced /v HideFileExt /t REG_DWORD /d 0 /f"
    variants:
        -with_netkvm:
            driver_name = netkvm
            nics += " nic2"
            nic_model_nic1 = virtio
            nic_model_nic2 = rtl8139
            device_name = "Red Hat VirtIO Ethernet Adapter"
        -with_viorng:
            driver_name = viorng
            device_name = "VirtIO RNG Device"
            no_virtio_rng:
                virtio_rngs += " rng0"
                backend_rng0 = rng-random
                backend_type = passthrough
                filename_passthrough = /dev/random
        -with_block:
            driver_name = viostor
            device_name = "Red Hat VirtIO SCSI controller"
            drive_format_image1 = ide
            images += " stg"
            image_name_stg = "images/storage"
            image_size_stg = 4G
            drive_format_stg = virtio
        -with_vioscsi:
            driver_name = vioscsi
            device_name = "Red Hat VirtIO SCSI pass-through controller"
            cd_format_fixed =ide
            drive_format_image1 = ide
            images += " stg"
            image_name_stg = "images/storage"
            image_size_stg = 4G
            drive_format_stg = scsi-hd
        -with_vioserial:
            driver_name = vioser
            device_name = "VirtIO-Serial Driver"
            virtio_ports = "vs"
            virtio_port_type = serialport
        -with_balloon:
            driver_name = balloon
            device_name = "VirtIO Balloon Driver"
            balloon = balloon0
            balloon_dev_devid = balloon0
            balloon_dev_add_bus = yes
    variants:
        - virtio_install:
            uninstall = False
        - virtio_downgrade:
            uninstall = False
            cdrom_virtio = isos/windows/virtio-win-downgrade.iso
        - virtio_reinstall:
            uninstall = True
