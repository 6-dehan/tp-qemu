- nvdimm:
    type = nvdimm
    slots_mem = 4
    maxmem_mem = 32G
    vm_mem_limit = 30G
    kill_vm_on_error = yes
    login_timeout = 240
    only x86_64
    no Windows
    no RHEL.6 RHEL.5 RHEL.4 RHEL.3
    no RHEL.7.2 RHEL.7.1 RHEL.7.0
    no Host_RHEL.m5
    no Host_RHEL.m6
    no Host_RHEL.m7.u0, Host_RHEL.m7.u1, Host_RHEL.m7.u2
    machine_type_extra_params = "nvdimm=on"
    backend_mem = memory-backend-file
    nv_backend = /tmp/nvdimm0
    mem-path = ${nv_backend}
    mount_dir = "/mnt"
    pre_command = "dd if=/dev/zero of=${nv_backend} bs=1M count=1024"
    dev_path = /dev/pmem0
    format_command = "mkfs.xfs -f ${dev_path}"
    RHEL.8:
        format_command += " -m reflink=0"
    mount_command = "mount -o dax ${dev_path} ${mount_dir}"
    post_command = "rm -rf ${nv_backend}"
    mem_devs = mem1
    size_mem = 1G
    share_mem = yes
    nv_file = "${mount_dir}/nv0"

    variants:
        - nvdimm_basic:
        - nvdimm_emulate:
            # Please update host kernel line first, such as add "memmap=1G!5G":
            # 1G is the size, 5G is the start address of host memory
            start_vm = "no"
            nv_backend = "/dev/pmem0"
            mem-path = ${nv_backend}
            del pre_command
            del post_command
            variants:
                - @pmem_default:
                - pmem_on:
                    pmem_mem = on
        - nvdimm_dax:
            start_vm = "no"
            nvdimm_dax = "yes"
            nv_backend = "/dev/dax0.0"
            mem-path = ${nv_backend}
            del pre_command
            del post_command
            ndctl_install_cmd = "rpm -q ndctl || yum install -y ndctl"
            create_dax_cmd = "ndctl create-namespace -m dax -e namespace0.0 -f -v -a 4096"
            del_dax_cmd = "ndctl create-namespace -m memory -e namespace0.0 -f -v -a 4096"
        - nvdimm_mapsync:
            type = nvdimm_mapsync
            no Host_RHEL.m7
            pmem_mem = on
            nv_backend = nvdimm0
            mount_dir = "/mnt/pmem"
            mem-path = "${mount_dir}/${nv_backend}"
            format_command = "mkfs.xfs -f ${dev_path} -m reflink=0"
            mount_command = "mkdir -p ${mount_dir} && mount -o dax ${dev_path} ${mount_dir}"
            truncate_command = "truncate -s ${size_mem} ${mount_dir}/${nv_backend}"
            check_command = "grep -A21 '${nv_backend}' /proc/%s/smaps"
            clean_command = "rm -rf ${mount_dir}/${nv_backend} && umount ${mount_dir} && rm -rf ${mount_dir}"
            start_vm = no
        - nvdimm_mode:
            type = nvdimm_mode
            mem_devs = mem1 mem2
            mem-path_mem1 = /tmp/test1.img
            mem-path_mem2 = /tmp/test2.img
            align_mem1 = 128M
            align_mem2 = 128M
            dimm_extra_params = "label-size=2M"
            pre_command = "dd if=/dev/zero of=${mem-path_mem1} bs=1M count=1024"
            pre_command += "; dd if=/dev/zero of=${mem-path_mem2} bs=1M count=1024"
            post_command = "rm -rf ${mem-path_mem1} ${mem-path_mem2}"
            create_dax_cmd = "ndctl create-namespace -m dax -e namespace%s.0 -f -v -a 4096"
            ndctl_check_cmd = "ndctl list"
            del mount_dir
            del dev_path
            del format_command
            del mount_command
        - nvdimm_hotplug:
            del mem_devs
            target_mems = mem1
