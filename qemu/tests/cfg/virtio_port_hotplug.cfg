- virtio_port_hotplug:
    type = virtio_port_hotplug
    serials += " vc1 vc2"
    serial_type_vc1 = virtserialport
    serial_type_vc2 = virtconsole
    unplug_device = vc1 vc2
    kill_vm = yes
    kill_vm_on_error = yes
    repeat_times = 100
    Linux:
        modprobe_module = virtio_console
    variants:
        - unplug_chardev:
            unplug_chardev_vc1 = yes
            unplug_chardev_vc2 = yes
        - @unplug_port:
            unplug_chardev_vc1 = no
            unplug_chardev_vc2 = no
        - hotplug_port_pci:
            type = virtio_serial_hotplug_port_pci
            start_vm = no
            extra_chardevs = "channel1 channel2"
            extra_serials = "port1 port2"
            serial_type_port1 = "virtserialport"
            serial_type_port2 = "virtserialport"
            guest_scripts = VirtIoChannel_guest_send_receive.py;windows_support.py
            host_script = serial_host_send_receive.py
            guest_script = VirtIoChannel_guest_send_receive.py
            clean_cmd = rm -f
            guest_script_folder = /var/tmp/
            Windows:
                guest_script_folder = C:\
                clean_cmd = del /f /q
                tmp_dir = %TEMP%
                python_bin = python2.7
        - hotplug_various_chardev:
            type = virtio_serial_various_chardev_hotplug
            serials = ""
            start_vm = yes
            extra_chardevs = "channel1 channel2 channel3 channel4 channel5 channel6"
            chardev_backend_channel2 = tcp_socket
            chardev_backend_channel3 = pty
            chardev_backend_channel4 = null
            chardev_backend_channel5 = file
            chardev_backend_channel6 = ringbuf
            ringbuf_write_size = 2048
            ringbuf_read_size = 1000
            ringbuf_data = 'adcdefgh'
            ringbuf_format = 'utf8'
